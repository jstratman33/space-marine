<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMarineStillRight</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mySpeed = 4;
myDirection = 0;
isAttacking = false;
isWalking = false;
facingRight = true;
isHit = false;
health = 100;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isHit = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isWalking = false;
if ((keyboard_check(ord('D')) || keyboard_check(vk_right)) &amp;&amp; place_free(x + mySpeed, y) &amp;&amp; objOverlord.gameOver == false)
{
    x += mySpeed;
    myDirection = 0;
    sprite_index = sprMarineRunRight;
    isWalking = true;
    facingRight = true;
}

if ((keyboard_check(ord('A')) || keyboard_check(vk_left)) &amp;&amp; place_free(x - mySpeed, y) &amp;&amp; objOverlord.gameOver == false)
{
    x -= mySpeed;
    myDirection = 180;
    sprite_index = sprMarineRunLeft;
    isWalking = true;
    facingRight = false;
}

if ((keyboard_check(ord('W')) || keyboard_check(vk_up)) &amp;&amp; place_free(x, y - mySpeed) &amp;&amp; objOverlord.gameOver == false)
{
    y -= mySpeed;
    myDirection = 90;
    if (facingRight)
    {
        sprite_index = sprMarineRunRight;
    }
    else
    {
        sprite_index = sprMarineRunLeft;
    }
    isWalking = true;
}

if ((keyboard_check(ord('S')) || keyboard_check(vk_down)) &amp;&amp; place_free(x, y + mySpeed) &amp;&amp; objOverlord.gameOver == false)
{
    y += mySpeed;
    myDirection = 270;
    if (facingRight)
    {
        sprite_index = sprMarineRunRight;
    }
    else
    {
        sprite_index = sprMarineRunLeft;
    }
    isWalking = true;
}

if (isWalking == true)
{
    image_speed = 0.3;
} 
else 
{
    if (facingRight) 
    {
        sprite_index = sprMarineStillRight
    }
    else 
    {
        sprite_index = sprMarineStillLeft
    }
    image_speed = 0;
}

if (keyboard_check_pressed(vk_space) &amp;&amp; isAttacking == false)
{
    //instance_create(x, y, objPlayerAttack);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBossAttack">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>health -= 25;
score -= 25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objCake">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (health + 25 &lt;= 100) {
    health += 25;
}
else {
    health = 100;
}
score += 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objMinion">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isHit == false)
{
    health -= 20;
    score -= 20;
    isHit = true;
    alarm[0] = 30;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBoss">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (isHit == false)
{
    health -= 34;
    score -= 50;
    isHit = true;
    alarm[0] = 30;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.lastRoom == global.portalA)
{
    if (objMarine.facingRight)
    {
        objMarine.x = objDoorwayA.x + 16;
    }
    else
    {
        objMarine.x = objDoorwayA.x - 16;
    }
    objMarine.y = objDoorwayA.y + 16;
} 
else if (global.lastRoom == global.portalB) 
{
    if (objMarine.facingRight)
    {
        objMarine.x = objDoorwayB.x + 16;
    }
    else
    {
        objMarine.x = objDoorwayB.x - 16;
    }
    objMarine.y = objDoorwayB.y;
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (facingRight)
{
    instance_create(objMarine.x + 30, objMarine.y + 14, objMarineAttack);
}
else 
{
    instance_create(objMarine.x + 1, objMarine.y + 14, objMarineAttack);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
